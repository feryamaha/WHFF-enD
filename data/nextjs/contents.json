[
  {
    "conceptId": "nextjs",
    "arrayId": "array-nextjs-intro",
    "posts": [
      {
        "id": "1",
        "title": "O que é Next.js?",
        "content1": "Next.js é um framework React que permite recursos como renderização do lado do servidor (SSR) e geração de sites estáticos (SSG) para aplicações web baseadas em React. Foi desenvolvido pela Vercel e oferece uma experiência de desenvolvimento otimizada com recursos como roteamento baseado em sistema de arquivos, suporte a TypeScript, otimização de imagens e muito mais.",
        "content2": "O Next.js resolve muitos problemas comuns no desenvolvimento React, como configuração de bundling, otimização de performance e SEO. Ele também oferece uma API intuitiva para buscar dados, permitindo que você escolha entre SSR, SSG ou ISR (Incremental Static Regeneration) dependendo das necessidades do seu projeto.",
        "content3": "Com o Next.js, você pode criar aplicações web modernas com melhor performance, SEO e experiência do usuário. O framework também oferece recursos avançados como API Routes para criar endpoints de API, middleware para manipulação de requisições, e suporte nativo a TypeScript e CSS Modules.",
        "code": [
          {
            "description": "Exemplo 1: Criando uma página básica em Next.js",
            "javascript": "// pages/index.js\nexport default function Home() {\n  return (\n    <div>\n      <h1>Bem-vindo ao Next.js!</h1>\n      <p>Esta é uma página estática</p>\n    </div>\n  );\n}"
          },
          {
            "description": "Exemplo 2: Página com Server-Side Rendering",
            "javascript": "// pages/posts/[id].js\nexport async function getServerSideProps({ params }) {\n  const res = await fetch(`https://api.example.com/posts/${params.id}`);\n  const post = await res.json();\n\n  return {\n    props: {\n      post,\n    },\n  };\n}\n\nexport default function Post({ post }) {\n  return (\n    <article>\n      <h1>{post.title}</h1>\n      <p>{post.content}</p>\n    </article>\n  );\n}"
          }
        ]
      }
    ]
  },
  {
    "conceptId": "pages",
    "arrayId": "array-nextjs-pages",
    "posts": [
      {
        "id": "2",
        "title": "Sistema de Páginas no Next.js",
        "content1": "O Next.js utiliza um sistema de roteamento baseado em arquivos, onde cada arquivo dentro do diretório `pages` se torna automaticamente uma rota. Por exemplo, `pages/about.js` se torna a rota `/about`, e `pages/posts/[id].js` se torna uma rota dinâmica como `/posts/1`, `/posts/2`, etc.",
        "content2": "Além das páginas regulares, o Next.js suporta layouts compartilhados através do diretório `pages/_app.js` e `pages/_document.js`. O `_app.js` é usado para manter o estado entre navegações de página e adicionar layouts globais, enquanto o `_document.js` permite personalizar o documento HTML completo.",
        "content3": "O Next.js também oferece recursos avançados de roteamento como rotas aninhadas, rotas de grupo e middleware. Isso permite criar estruturas de navegação complexas e adicionar lógica personalizada antes do carregamento das páginas.",
        "code": [
          {
            "description": "Exemplo 1: Estrutura básica de páginas",
            "javascript": "// pages/index.js\nexport default function Home() {\n  return <h1>Página Inicial</h1>;\n}\n\n// pages/about.js\nexport default function About() {\n  return <h1>Sobre</h1>;\n}\n\n// pages/posts/[id].js\nexport default function Post({ id }) {\n  return <h1>Post {id}</h1>;\n}"
          },
          {
            "description": "Exemplo 2: Layout compartilhado com _app.js",
            "javascript": "// pages/_app.js\nimport Layout from '../components/Layout';\n\nexport default function MyApp({ Component, pageProps }) {\n  return (\n    <Layout>\n      <Component {...pageProps} />\n    </Layout>\n  );\n}"
          }
        ]
      }
    ]
  }
]
